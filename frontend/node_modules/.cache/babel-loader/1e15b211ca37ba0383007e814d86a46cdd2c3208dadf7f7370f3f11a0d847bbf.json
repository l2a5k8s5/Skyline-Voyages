{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laksh\\\\OneDrive\\\\Desktop\\\\SEM 5 BEE Project\\\\Skyline Voyages\\\\Skyline Voyages\\\\Skyline Voyages\\\\frontend\\\\src\\\\pages\\\\Analysis.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { BASE_URL } from '../utils/config.js'; // Adjust path as needed\n// import { Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n// import '../styles/analysis.css';\n\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// const Analysis = () => {\n//     const [tourCount, setTourCount] = useState(null); // State to store tour count\n//     const [userCount, setUserCount] = useState(null);// State to store user count\n//     const [bookingCount, setBookingCount] = useState(null); // State to store tour count\n//     const [reviewCount, setReviewCount] = useState(null);\n//     const [error, setError] = useState(null); // State to handle errors\n\n//     // Fetch the tour count when the component mounts\n//     useEffect(() => {\n//       const fetchData = async () => {\n//         try {\n//           const response = await fetch(${BASE_URL}/tours/search/getTourCount, {\n//             method: 'GET',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//           });\n\n//           if (response.ok) {\n//             const data = await response.json();\n//             setTourCount(data.data); // Assuming response contains a 'data' field with the count\n//           } else {\n//             setError('Failed to fetch tour count');\n//           }\n\n//             /// user count //////////////////////////\n\n//           const userResponse = await fetch(${BASE_URL}/users/search/count, {\n//             method: 'GET',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//           });\n\n//           // Log response status and body\n//           console.log('User response status:', userResponse.status);\n//           const userData = await userResponse.json();\n//           console.log('User data:', userData); // Check the response content\n\n//           if (userResponse.ok) {\n//             setUserCount(userData.data); // Assuming response contains 'data'\n//           } else {\n//             setError('Failed to fetch user count');\n//           }\n\n//           // booking count /////////////////////\n\n//           const bookingResponse = await fetch(${BASE_URL}/booking/search/getBookingsCount,{\n//             method: 'GET',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//           })\n\n//           if (bookingResponse.ok) {\n//             const bookingData = await bookingResponse.json();\n//             setBookingCount(bookingData.data); // Assuming response contains a 'data' field with the count\n//           } else {\n//             setError('No Bookings found');\n//           }\n\n//           //// reviews count /////////////////////////////\n\n//           const reviewResponse = await fetch(${BASE_URL}/review/search/getTotalReviews,{\n//             method: 'GET',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//           })\n\n//           if (reviewResponse.ok) {\n//             const reviewData = await reviewResponse.json();\n//             setReviewCount(reviewData.data); // Assuming response contains a 'data' field with the count\n//           } else {\n//             setError('No Reviews Found');\n//           }\n\n//         } catch (err) {\n//           setError('Error fetching data');\n//           console.error(err);\n//         }\n//       };\n\n//       fetchData();\n//     }, []); // Empty dependency array ensures this runs once on mount\n\n//     return (\n//       <div className=\"analysis-container\">\n\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <div className=\"count-cards\">\n//         <div className=\"count-card\">\n//           <h2>Total Tours</h2>\n//           <p>{tourCount !== null ? tourCount : 'Fetching tour data...'}</p>\n//         </div>\n//         <div className=\"count-card\">\n//           <h2>Total Users</h2>\n//           <p>{userCount !== null ? userCount : 'Fetching user count...'}</p>\n//         </div>\n//         <div className=\"count-card\">\n//           <h2>Total Bookings</h2>\n//           <p>{bookingCount !== null ? bookingCount : 'Fetching Booking Count...'}</p>\n//         </div>\n//         <div className=\"count-card\">\n//           <h2>Total Reviews</h2>\n//           <p>{reviewCount !== null ? reviewCount : 'Fetching total Reviews...'}</p>\n//         </div>\n//       </div>\n//     </div>\n\n//     );\n\n// };\n\n// export default Analysis;\nimport React, { useEffect, useState } from 'react';\nimport { BASE_URL } from '../utils/config.js';\nimport { Line, Bar, Doughnut, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale, ArcElement } from 'chart.js';\nimport '../styles/analysis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale, ArcElement);\nconst Analysis = () => {\n  _s();\n  const [tourCount, setTourCount] = useState(null);\n  const [userCount, setUserCount] = useState(null);\n  const [bookingCount, setBookingCount] = useState(null);\n  const [reviewCount, setReviewCount] = useState(null);\n  const [totalAmount, setTotalAmount] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/tours/search/getTourCount`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTourCount(data.data);\n        } else {\n          setError('Failed to fetch tour count');\n        }\n        const userResponse = await fetch(`${BASE_URL}/users/search/count`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          setUserCount(userData.data);\n        } else {\n          setError('Failed to fetch user count');\n        }\n        const bookingResponse = await fetch(`${BASE_URL}/booking/search/getBookingsCount`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (bookingResponse.ok) {\n          const bookingData = await bookingResponse.json();\n          setBookingCount(bookingData.data);\n        } else {\n          setError('No Bookings found');\n        }\n        const reviewResponse = await fetch(`${BASE_URL}/review/search/getTotalReviews`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (reviewResponse.ok) {\n          const reviewData = await reviewResponse.json();\n          setReviewCount(reviewData.data);\n        } else {\n          setError('No Reviews Found');\n        }\n      } catch (err) {\n        setError('Error fetching data');\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // // Data for charts\n  // const chartData = {\n  //   labels: ['Users', 'Tours', 'Bookings', 'Reviews'],\n  //   datasets: [\n  //     {\n  //       label: 'Counts',\n  //       data: [userCount, tourCount, bookingCount, reviewCount],\n  //       backgroundColor: ['#3498db', '#e74c3c', '#2ecc71', '#f1c40f'],\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  // // Data for Pie Chart\n  // const pieChartData = {\n  //   labels: ['Users', 'Bookings'],\n  //   datasets: [\n  //     {\n  //       data: [userCount, bookingCount],\n  //       backgroundColor: ['#3498db', '#e74c3c'],\n  //       hoverBackgroundColor: ['#2980b9', '#c0392b'],\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  // const pieChartOptions = {\n  //   maintainAspectRatio: false,\n  //   plugins: {\n  //     legend: {\n  //       position: 'bottom',\n  //     },\n  //   },\n  // };\n\n  // Data for Bar Chart\n  const barChartData = {\n    labels: ['Users', 'Tours', 'Bookings', 'Reviews'],\n    datasets: [{\n      label: 'Counts',\n      data: [userCount, tourCount, bookingCount, reviewCount],\n      backgroundColor: ['rgba(52, 152, 219, 0.6)',\n      // Blue\n      'rgba(231, 76, 60, 0.6)',\n      // Red\n      'rgba(46, 204, 113, 0.6)',\n      // Green\n      'rgba(241, 196, 15, 0.6)' // Yellow\n      ],\n\n      borderColor: ['#2980b9', '#c0392b', '#27ae60', '#f39c12'],\n      borderWidth: 2,\n      hoverBackgroundColor: ['rgba(52, 152, 219, 1)',\n      // Blue\n      'rgba(231, 76, 60, 1)',\n      // Red\n      'rgba(46, 204, 113, 1)',\n      // Green\n      'rgba(241, 196, 15, 1)' // Yellow\n      ]\n    }]\n  };\n\n  // Data for Pie Chart\n  const pieChartData = {\n    labels: ['Users', 'Bookings'],\n    datasets: [{\n      data: [userCount, bookingCount],\n      backgroundColor: ['rgb(216, 110, 174)',\n      // Blue\n      'rgb(130, 209, 96)' // Red\n      ],\n\n      hoverBackgroundColor: ['rgb(174, 65, 130)',\n      // Blue\n      'rgb(98, 174, 65)' // Red\n      ]\n    }]\n  };\n\n  // Pie Chart Options\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          }\n        }\n      },\n      elements: {\n        arc: {\n          // Apply shadow to arcs (pie segments)\n          shadowColor: 'rgba(0, 0, 0, 0.7)',\n          // Shadow color\n          shadowBlur: 20,\n          // Amount of blur (higher values create a more blurred shadow)\n          shadowOffsetX: 6,\n          // Horizontal shadow offset\n          shadowOffsetY: 6 // Vertical shadow offset\n        }\n      }\n    }\n  };\n\n  // Data for Doughnut Chart\n  const doughnutChartData = {\n    labels: ['Total Tours', 'Total Reviews'],\n    datasets: [{\n      data: [tourCount, reviewCount],\n      backgroundColor: ['rgb(180, 150, 254)', 'rgb(109, 181, 115)'],\n      // Colors for each section\n      hoverBackgroundColor: ['rgb(105, 91, 143)', 'rgb(81, 123, 85)'],\n      // Hover colors\n      borderWidth: 2\n    }]\n  };\n\n  // Options for Doughnut Chart\n  const doughnutChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          font: {\n            size: 14\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          }\n        }\n      },\n      doughnutLabel: {\n        // Center label inside the doughnut\n        display: true,\n        font: {\n          size: 20,\n          weight: 'bold'\n        },\n        color: '#2c3e50',\n        text: `${(tourCount / (tourCount + reviewCount) * 100).toFixed(1)}%`\n      }\n    },\n    animation: {\n      animateScale: true,\n      // Animate scale (enlarges the chart)\n      animateRotate: true // Animate rotation (rotates on loading)\n    },\n\n    cutout: '60%',\n    // The size of the hole in the middle (adjustable)\n    hoverOffset: 6,\n    // Slight offset effect when hovering\n    elements: {\n      arc: {\n        shadowColor: 'rgba(0, 0, 0, 0.5)',\n        // Darker shadow for more visibility\n        shadowBlur: 20,\n        // Increased blur\n        shadowOffsetX: 6,\n        // Increased offset for more visible shadow\n        shadowOffsetY: 6 // Increased vertical offset\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"count-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Tours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tourCount !== null ? tourCount : 'Fetching tour data...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userCount !== null ? userCount : 'Fetching user count...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bookingCount !== null ? bookingCount : 'Fetching Booking Count...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"count-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reviewCount !== null ? reviewCount : 'Fetching total Reviews...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        style: {\n          width: '400px',\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        style: {\n          width: '400px',\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pie Chart: Users vs Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), userCount !== null && bookingCount !== null ? /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: pieChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        style: {\n          width: '400px',\n          height: '400px'\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doughnut Chart: Tours vs Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), tourCount !== null && reviewCount !== null ? /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: doughnutChartData,\n          options: doughnutChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"VAzhqd8CA4ky/648OHllFzadEPQ=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useEffect","useState","BASE_URL","Line","Bar","Doughnut","Pie","Chart","ChartJS","Title","Tooltip","Legend","BarElement","LineElement","PointElement","CategoryScale","LinearScale","ArcElement","register","Analysis","tourCount","setTourCount","userCount","setUserCount","bookingCount","setBookingCount","reviewCount","setReviewCount","totalAmount","setTotalAmount","error","setError","fetchData","response","fetch","method","headers","ok","data","json","userResponse","userData","bookingResponse","bookingData","reviewResponse","reviewData","err","console","barChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","pieChartData","pieChartOptions","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","raw","elements","arc","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","doughnutChartData","doughnutChartOptions","font","size","doughnutLabel","display","weight","color","text","toFixed","animation","animateScale","animateRotate","cutout","hoverOffset","width","height"],"sources":["C:/Users/Laksh/OneDrive/Desktop/SEM 5 BEE Project/Skyline Voyages/Skyline Voyages/Skyline Voyages/frontend/src/pages/Analysis.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { BASE_URL } from '../utils/config.js'; // Adjust path as needed\r\n// import { Line } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\n// import '../styles/analysis.css';\r\n\r\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\n// const Analysis = () => {\r\n//     const [tourCount, setTourCount] = useState(null); // State to store tour count\r\n//     const [userCount, setUserCount] = useState(null);// State to store user count\r\n//     const [bookingCount, setBookingCount] = useState(null); // State to store tour count\r\n//     const [reviewCount, setReviewCount] = useState(null);\r\n//     const [error, setError] = useState(null); // State to handle errors\r\n  \r\n//     // Fetch the tour count when the component mounts\r\n//     useEffect(() => {\r\n//       const fetchData = async () => {\r\n//         try {\r\n//           const response = await fetch(${BASE_URL}/tours/search/getTourCount, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//             },\r\n//           });\r\n  \r\n//           if (response.ok) {\r\n//             const data = await response.json();\r\n//             setTourCount(data.data); // Assuming response contains a 'data' field with the count\r\n//           } else {\r\n//             setError('Failed to fetch tour count');\r\n//           }\r\n\r\n\r\n\r\n\r\n//             /// user count //////////////////////////\r\n\r\n//           const userResponse = await fetch(${BASE_URL}/users/search/count, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//             },\r\n//           });\r\n      \r\n//           // Log response status and body\r\n//           console.log('User response status:', userResponse.status);\r\n//           const userData = await userResponse.json();\r\n//           console.log('User data:', userData); // Check the response content\r\n      \r\n//           if (userResponse.ok) {\r\n//             setUserCount(userData.data); // Assuming response contains 'data'\r\n//           } else {\r\n//             setError('Failed to fetch user count');\r\n//           }\r\n\r\n\r\n\r\n\r\n//           // booking count /////////////////////\r\n\r\n//           const bookingResponse = await fetch(${BASE_URL}/booking/search/getBookingsCount,{\r\n//             method: 'GET',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//             },\r\n//           })\r\n\r\n//           if (bookingResponse.ok) {\r\n//             const bookingData = await bookingResponse.json();\r\n//             setBookingCount(bookingData.data); // Assuming response contains a 'data' field with the count\r\n//           } else {\r\n//             setError('No Bookings found');\r\n//           }\r\n\r\n\r\n\r\n//           //// reviews count /////////////////////////////\r\n\r\n\r\n          \r\n//           const reviewResponse = await fetch(${BASE_URL}/review/search/getTotalReviews,{\r\n//             method: 'GET',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//             },\r\n//           })\r\n\r\n//           if (reviewResponse.ok) {\r\n//             const reviewData = await reviewResponse.json();\r\n//             setReviewCount(reviewData.data); // Assuming response contains a 'data' field with the count\r\n//           } else {\r\n//             setError('No Reviews Found');\r\n//           }\r\n\r\n\r\n\r\n\r\n//         } catch (err) {\r\n//           setError('Error fetching data');\r\n//           console.error(err);\r\n//         }\r\n//       };\r\n\r\n\r\n\r\n      \r\n\r\n\r\n  \r\n//       fetchData();\r\n//     }, []); // Empty dependency array ensures this runs once on mount\r\n  \r\n//     return (\r\n//       <div className=\"analysis-container\">\r\n      \r\n//       {error && <p className=\"error-message\">{error}</p>}\r\n  \r\n//       <div className=\"count-cards\">\r\n//         <div className=\"count-card\">\r\n//           <h2>Total Tours</h2>\r\n//           <p>{tourCount !== null ? tourCount : 'Fetching tour data...'}</p>\r\n//         </div>\r\n//         <div className=\"count-card\">\r\n//           <h2>Total Users</h2>\r\n//           <p>{userCount !== null ? userCount : 'Fetching user count...'}</p>\r\n//         </div>\r\n//         <div className=\"count-card\">\r\n//           <h2>Total Bookings</h2>\r\n//           <p>{bookingCount !== null ? bookingCount : 'Fetching Booking Count...'}</p>\r\n//         </div>\r\n//         <div className=\"count-card\">\r\n//           <h2>Total Reviews</h2>\r\n//           <p>{reviewCount !== null ? reviewCount : 'Fetching total Reviews...'}</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n\r\n//     );\r\n  \r\n// };\r\n\r\n// export default Analysis;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BASE_URL } from '../utils/config.js';\r\nimport { Line, Bar, Doughnut, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n} from 'chart.js';\r\nimport '../styles/analysis.css';\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement,LineElement,PointElement, CategoryScale, LinearScale, ArcElement);\r\n\r\nconst Analysis = () => {\r\n  const [tourCount, setTourCount] = useState(null);\r\n  const [userCount, setUserCount] = useState(null);\r\n  const [bookingCount, setBookingCount] = useState(null);\r\n  const [reviewCount, setReviewCount] = useState(null);\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n\r\n        const response = await fetch(`${BASE_URL}/tours/search/getTourCount`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTourCount(data.data);\r\n        } else {\r\n          setError('Failed to fetch tour count');\r\n        }\r\n\r\n\r\n        const userResponse = await fetch(`${BASE_URL}/users/search/count`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n          setUserCount(userData.data);\r\n        } else {\r\n          setError('Failed to fetch user count');\r\n        }\r\n\r\n\r\n        const bookingResponse = await fetch(`${BASE_URL}/booking/search/getBookingsCount`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (bookingResponse.ok) {\r\n          const bookingData = await bookingResponse.json();\r\n          setBookingCount(bookingData.data);\r\n        } else {\r\n          setError('No Bookings found');\r\n        }\r\n\r\n\r\n        const reviewResponse = await fetch(`${BASE_URL}/review/search/getTotalReviews`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (reviewResponse.ok) {\r\n          const reviewData = await reviewResponse.json();\r\n          setReviewCount(reviewData.data);\r\n        } else {\r\n          setError('No Reviews Found');\r\n        }\r\n\r\n        \r\n      } catch (err) {\r\n        setError('Error fetching data');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // // Data for charts\r\n  // const chartData = {\r\n  //   labels: ['Users', 'Tours', 'Bookings', 'Reviews'],\r\n  //   datasets: [\r\n  //     {\r\n  //       label: 'Counts',\r\n  //       data: [userCount, tourCount, bookingCount, reviewCount],\r\n  //       backgroundColor: ['#3498db', '#e74c3c', '#2ecc71', '#f1c40f'],\r\n  //       borderWidth: 1,\r\n  //     },\r\n  //   ],\r\n  // };\r\n\r\n  // // Data for Pie Chart\r\n  // const pieChartData = {\r\n  //   labels: ['Users', 'Bookings'],\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [userCount, bookingCount],\r\n  //       backgroundColor: ['#3498db', '#e74c3c'],\r\n  //       hoverBackgroundColor: ['#2980b9', '#c0392b'],\r\n  //       borderWidth: 1,\r\n  //     },\r\n  //   ],\r\n  // };\r\n\r\n  // const pieChartOptions = {\r\n  //   maintainAspectRatio: false,\r\n  //   plugins: {\r\n  //     legend: {\r\n  //       position: 'bottom',\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n\r\n\r\n    // Data for Bar Chart\r\n    const barChartData = {\r\n      labels: ['Users', 'Tours', 'Bookings', 'Reviews'],\r\n      datasets: [\r\n        {\r\n          label: 'Counts',\r\n          data: [userCount, tourCount, bookingCount, reviewCount],\r\n          backgroundColor: [\r\n            'rgba(52, 152, 219, 0.6)', // Blue\r\n            'rgba(231, 76, 60, 0.6)', // Red\r\n            'rgba(46, 204, 113, 0.6)', // Green\r\n            'rgba(241, 196, 15, 0.6)', // Yellow\r\n          ],\r\n          borderColor: ['#2980b9', '#c0392b', '#27ae60', '#f39c12'],\r\n          borderWidth: 2,\r\n          hoverBackgroundColor: [\r\n            'rgba(52, 152, 219, 1)', // Blue\r\n            'rgba(231, 76, 60, 1)', // Red\r\n            'rgba(46, 204, 113, 1)', // Green\r\n            'rgba(241, 196, 15, 1)', // Yellow\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  \r\n    // Data for Pie Chart\r\n    const pieChartData = {\r\n      labels: ['Users', 'Bookings'],\r\n      datasets: [\r\n        {\r\n          data: [userCount, bookingCount],\r\n          backgroundColor: [\r\n            'rgb(216, 110, 174)', // Blue\r\n            'rgb(130, 209, 96)', // Red\r\n          ],\r\n          hoverBackgroundColor: [\r\n            'rgb(174, 65, 130)', // Blue\r\n            'rgb(98, 174, 65)', // Red\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  \r\n    // Pie Chart Options\r\n    const pieChartOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'right',\r\n        },\r\n\r\n        tooltip: {\r\n          callbacks: {\r\n            label: function (tooltipItem) {\r\n              return `${tooltipItem.label}: ${tooltipItem.raw}`;\r\n            },\r\n          },\r\n        },\r\n        elements: {\r\n          arc: {\r\n            // Apply shadow to arcs (pie segments)\r\n            shadowColor: 'rgba(0, 0, 0, 0.7)', // Shadow color\r\n            shadowBlur: 20, // Amount of blur (higher values create a more blurred shadow)\r\n            shadowOffsetX: 6, // Horizontal shadow offset\r\n            shadowOffsetY: 6, // Vertical shadow offset\r\n          },\r\n        }\r\n      },\r\n    };\r\n  \r\n\r\n  // Data for Doughnut Chart\r\n  const doughnutChartData = {\r\n    labels: ['Total Tours', 'Total Reviews'],\r\n    datasets: [\r\n      {\r\n        data: [tourCount, reviewCount],\r\n        backgroundColor: ['rgb(180, 150, 254)', 'rgb(109, 181, 115)'], // Colors for each section\r\n        hoverBackgroundColor: ['rgb(105, 91, 143)', 'rgb(81, 123, 85)'], // Hover colors\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Options for Doughnut Chart\r\n  const doughnutChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (tooltipItem) {\r\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\r\n          },\r\n        },\r\n      },\r\n      doughnutLabel: {\r\n        // Center label inside the doughnut\r\n        display: true,\r\n        font: {\r\n          size: 20,\r\n          weight: 'bold',\r\n        },\r\n        color: '#2c3e50',\r\n        text: `${((tourCount / (tourCount + reviewCount)) * 100).toFixed(1)}%`,\r\n      },\r\n    },\r\n    animation: {\r\n      animateScale: true, // Animate scale (enlarges the chart)\r\n      animateRotate: true, // Animate rotation (rotates on loading)\r\n    },\r\n    cutout: '60%', // The size of the hole in the middle (adjustable)\r\n    hoverOffset: 6, // Slight offset effect when hovering\r\n    elements: {\r\n      arc: {\r\n        shadowColor: 'rgba(0, 0, 0, 0.5)',  // Darker shadow for more visibility\r\n        shadowBlur: 20,                     // Increased blur\r\n        shadowOffsetX: 6,                   // Increased offset for more visible shadow\r\n        shadowOffsetY: 6,                   // Increased vertical offset\r\n      },\r\n    },\r\n  };\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <div className=\"count-cards\">\r\n        <div className=\"count-card\">\r\n          <h2>Total Tours</h2>\r\n          <p>{tourCount !== null ? tourCount : 'Fetching tour data...'}</p>\r\n        </div>\r\n\r\n        <div className=\"count-card\">\r\n          <h2>Total Users</h2>\r\n          <p>{userCount !== null ? userCount : 'Fetching user count...'}</p>\r\n        </div>\r\n\r\n        <div className=\"count-card\">\r\n          <h2>Total Bookings</h2>\r\n          <p>{bookingCount !== null ? bookingCount : 'Fetching Booking Count...'}</p>\r\n        </div>\r\n\r\n        <div className=\"count-card\">\r\n          <h2>Total Reviews</h2>\r\n          <p>{reviewCount !== null ? reviewCount : 'Fetching total Reviews...'}</p>\r\n        </div>\r\n\r\n        {/* <div className=\"count-card\">\r\n          <h2>Total Amount Received</h2>\r\n          <p>{totalAmount !== null ? $${totalAmount} : 'Fetching total amount...'}</p>\r\n        </div> */}\r\n\r\n      </div>\r\n\r\n      <div className=\"charts\">\r\n        <div className=\"chart\" style={{ width: '400px', height: '400px' }} >\r\n          <h3>Bar Chart</h3>\r\n          <Bar data={barChartData} />\r\n        </div>      \r\n      </div>\r\n\r\n\r\n      <div className=\"charts\">\r\n        <div className=\"chart\" style={{ width: '400px', height: '400px' }}>\r\n          <h3>Pie Chart: Users vs Bookings</h3>\r\n          {userCount !== null && bookingCount !== null ? (\r\n            <Pie data={pieChartData} options={pieChartOptions} />\r\n          ) : (\r\n            <p>Loading chart...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <br /><br /><br /><br /><br /><br />\r\n\r\n      <div className=\"charts\">\r\n        <div className=\"chart\"  style={{ width: '400px', height: '400px' }}>\r\n        \r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <h3>Doughnut Chart: Tours vs Reviews</h3>\r\n          {tourCount !== null && reviewCount !== null ? (\r\n            <Doughnut data={doughnutChartData} options={doughnutChartOptions} />\r\n          ) : (\r\n            <p>Loading chart...</p>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Analysis;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}