{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laksh\\\\OneDrive\\\\Desktop\\\\SEM 5 BEE Project\\\\Skyline Voyages\\\\Skyline Voyages\\\\Skyline Voyages\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// import { createContext, useEffect, useReducer } from 'react'\n\n// const initial_state = {\n//    user: localStorage.getItem(\"user\") !== \"\" ? JSON.parse(localStorage.getItem(\"user\")) : \"null\",\n//    loading: false,\n//    error: null\n// }\n\n// export const AuthContext = createContext(initial_state)\n\n// const AuthReducer = (state, action) => {\n//    switch (action.type) {\n//       case 'LOGIN_START':\n//          return {\n//             user: null,\n//             loading: true,\n//             error: null\n//          }\n//       case 'LOGIN_SUCCESS':\n//          return {\n//             user: action.payload,\n//             loading: false,\n//             error: null\n//          }\n//       case 'LOGIN_FAILURE':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: action.payload\n//          }\n//       case 'REGISTER_SUCCESS':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: null\n//          }\n//       case 'LOGOUT':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: null\n//          }\n\n//       default:\n//          return state\n\n//    }\n\n// }\n\n// export const AuthContextProvider = ({ children }) => {\n\n//    const [state, dispatch] = useReducer(AuthReducer, initial_state)\n//    console.log(\"a1\")\n\n//    useEffect(() => {\n//       localStorage.setItem(\"user\", JSON.stringify(state.user))\n//       console.log(localStorage.getItem(\"user\"))\n//    }, [state.user])\n\n//    return <AuthContext.Provider value={{\n//       user: state.user,\n//       loading: state.loading,\n//       error: state.error,\n//       dispatch,\n//    }}>\n//       {children}\n//    </AuthContext.Provider>\n// }\n\n// import { createContext, useEffect, useReducer } from 'react';\n\n// const initial_state = {\n//   user: localStorage.getItem(\"user\"),\n//   loading: false,\n//   error: null\n// }\n// try {\n//   const savedUser = localStorage.getItem('user');\n//   if (savedUser) {\n//     initial_state.user = JSON.parse(savedUser);\n//   }\n// } catch (error) {\n//   console.error('Failed to parse user data from localStorage:', error);\n// }\n\n// export const AuthContext = createContext(initial_state);\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_START':\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case 'LOGIN_SUCCESS':\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGIN_FAILURE':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case 'REGISTER_SUCCESS':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGOUT':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   useEffect(() => {\n//     if (state.user) {\n//       try {\n//         localStorage.setItem('user', JSON.stringify(state.user));\n//       } catch (error) {\n//         console.error('Failed to save user data to localStorage:', error);\n//       }\n//     } else {\n//       localStorage.removeItem('user'); // Clean up if no user data\n//     }\n//   }, [state.user]);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// import { createContext, useEffect, useReducer } from 'react';\n\n// // Define initial state\n// const initial_state = {\n//   user: null,\n//   loading: false,\n//   error: null\n// };\n\n// // Try to retrieve user data from localStorage\n// const savedUser = localStorage.getItem('user');\n// if (savedUser) {\n//   try {\n//     initial_state.user = JSON.parse(savedUser);  // If found, parse the user data\n//   } catch (error) {\n//     console.error('Failed to parse user data from localStorage:', error); // Handle error if any\n//   }\n// }\n\n// // Create the context\n// export const AuthContext = createContext(initial_state);\n\n// // Reducer function for managing authentication actions\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_START':\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case 'LOGIN_SUCCESS':\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGIN_FAILURE':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case 'REGISTER_SUCCESS':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGOUT':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// // Context Provider\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   // Effect to sync user data with localStorage\n//   useEffect(() => {\n//     if (state.user) {\n//       try {\n//         localStorage.setItem('user', JSON.stringify(state.user));  // Save user to localStorage\n//       } catch (error) {\n//         console.error('Failed to save user data to localStorage:', error); // Handle error if any\n//       }\n//     } else {\n//       localStorage.removeItem('user');  // Remove user data from localStorage if not logged in\n//     }\n//   }, [state.user]);  // Only runs when state.user changes\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,  // Expose dispatch for dispatching actions\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// // context/AuthContext.js\n// import { createContext, useReducer } from 'react';\n\n// const INITIAL_STATE = {\n//   user: JSON.parse(localStorage.getItem('user')) || null,\n// };\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_SUCCESS':\n//       localStorage.setItem('user', JSON.stringify(action.payload));\n//       return {\n//         ...state,\n//         user: action.payload,\n//       };\n//     case 'LOGOUT':\n//       localStorage.removeItem('user');\n//       return {\n//         ...state,\n//         user: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContext = createContext(INITIAL_STATE);\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// context/AuthContext.js\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: null\n};\n\n// Attempt to safely parse the 'user' item from localStorage\nconst savedUser = localStorage.getItem('user');\nif (savedUser) {\n  try {\n    INITIAL_STATE.user = JSON.parse(savedUser);\n  } catch (e) {\n    console.error(\"Error parsing 'user' from localStorage:\", e);\n  }\n}\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('user', JSON.stringify(action.payload));\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: undefined\n      };\n    default:\n      return state;\n  }\n};\n_c = AuthReducer;\nexport const AuthContext = /*#__PURE__*/createContext(INITIAL_STATE);\n_c2 = AuthContext;\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"ih+Vd9fHXqjzC8XFlo5K5uS4lm8=\");\n_c3 = AuthContextProvider;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AuthReducer\");\n$RefreshReg$(_c2, \"AuthContext\");\n$RefreshReg$(_c3, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","INITIAL_STATE","user","savedUser","localStorage","getItem","JSON","parse","e","console","error","AuthReducer","state","action","type","setItem","stringify","payload","removeItem","undefined","AuthContext","AuthContextProvider","children","dispatch"],"sources":["C:/Users/Laksh/OneDrive/Desktop/SEM 5 BEE Project/Skyline Voyages/Skyline Voyages/Skyline Voyages/frontend/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useEffect, useReducer } from 'react'\n\n// const initial_state = {\n//    user: localStorage.getItem(\"user\") !== \"\" ? JSON.parse(localStorage.getItem(\"user\")) : \"null\",\n//    loading: false,\n//    error: null\n// }\n\n\n\n\n// export const AuthContext = createContext(initial_state)\n\n// const AuthReducer = (state, action) => {\n//    switch (action.type) {\n//       case 'LOGIN_START':\n//          return {\n//             user: null,\n//             loading: true,\n//             error: null\n//          }\n//       case 'LOGIN_SUCCESS':\n//          return {\n//             user: action.payload,\n//             loading: false,\n//             error: null\n//          }\n//       case 'LOGIN_FAILURE':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: action.payload\n//          }\n//       case 'REGISTER_SUCCESS':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: null\n//          }\n//       case 'LOGOUT':\n//          return {\n//             user: null,\n//             loading: false,\n//             error: null\n//          }\n\n         \n\n//       default:\n//          return state\n\n\n//    }\n\n\n// }\n\n\n\n\n\n// export const AuthContextProvider = ({ children }) => {\n\n//    const [state, dispatch] = useReducer(AuthReducer, initial_state)\n//    console.log(\"a1\")\n\n\n\n//    useEffect(() => {\n//       localStorage.setItem(\"user\", JSON.stringify(state.user))\n//       console.log(localStorage.getItem(\"user\"))\n//    }, [state.user])\n   \n\n\n//    return <AuthContext.Provider value={{\n//       user: state.user,\n//       loading: state.loading,\n//       error: state.error,\n//       dispatch,\n//    }}>\n//       {children}\n//    </AuthContext.Provider>\n// }\n\n\n\n// import { createContext, useEffect, useReducer } from 'react';\n\n// const initial_state = {\n//   user: localStorage.getItem(\"user\"),\n//   loading: false,\n//   error: null\n// }\n// try {\n//   const savedUser = localStorage.getItem('user');\n//   if (savedUser) {\n//     initial_state.user = JSON.parse(savedUser);\n//   }\n// } catch (error) {\n//   console.error('Failed to parse user data from localStorage:', error);\n// }\n\n// export const AuthContext = createContext(initial_state);\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_START':\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case 'LOGIN_SUCCESS':\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGIN_FAILURE':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case 'REGISTER_SUCCESS':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGOUT':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   useEffect(() => {\n//     if (state.user) {\n//       try {\n//         localStorage.setItem('user', JSON.stringify(state.user));\n//       } catch (error) {\n//         console.error('Failed to save user data to localStorage:', error);\n//       }\n//     } else {\n//       localStorage.removeItem('user'); // Clean up if no user data\n//     }\n//   }, [state.user]);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n\n// import { createContext, useEffect, useReducer } from 'react';\n\n// // Define initial state\n// const initial_state = {\n//   user: null,\n//   loading: false,\n//   error: null\n// };\n\n// // Try to retrieve user data from localStorage\n// const savedUser = localStorage.getItem('user');\n// if (savedUser) {\n//   try {\n//     initial_state.user = JSON.parse(savedUser);  // If found, parse the user data\n//   } catch (error) {\n//     console.error('Failed to parse user data from localStorage:', error); // Handle error if any\n//   }\n// }\n\n// // Create the context\n// export const AuthContext = createContext(initial_state);\n\n// // Reducer function for managing authentication actions\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_START':\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case 'LOGIN_SUCCESS':\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGIN_FAILURE':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case 'REGISTER_SUCCESS':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case 'LOGOUT':\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// // Context Provider\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   // Effect to sync user data with localStorage\n//   useEffect(() => {\n//     if (state.user) {\n//       try {\n//         localStorage.setItem('user', JSON.stringify(state.user));  // Save user to localStorage\n//       } catch (error) {\n//         console.error('Failed to save user data to localStorage:', error); // Handle error if any\n//       }\n//     } else {\n//       localStorage.removeItem('user');  // Remove user data from localStorage if not logged in\n//     }\n//   }, [state.user]);  // Only runs when state.user changes\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,  // Expose dispatch for dispatching actions\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n\n// // context/AuthContext.js\n// import { createContext, useReducer } from 'react';\n\n// const INITIAL_STATE = {\n//   user: JSON.parse(localStorage.getItem('user')) || null,\n// };\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_SUCCESS':\n//       localStorage.setItem('user', JSON.stringify(action.payload));\n//       return {\n//         ...state,\n//         user: action.payload,\n//       };\n//     case 'LOGOUT':\n//       localStorage.removeItem('user');\n//       return {\n//         ...state,\n//         user: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContext = createContext(INITIAL_STATE);\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n\n// context/AuthContext.js\nimport { createContext, useReducer } from 'react';\n\nconst INITIAL_STATE = {\n  user: null,\n};\n\n// Attempt to safely parse the 'user' item from localStorage\nconst savedUser = localStorage.getItem('user');\nif (savedUser) {\n  try {\n    INITIAL_STATE.user = JSON.parse(savedUser);\n  } catch (e) {\n    console.error(\"Error parsing 'user' from localStorage:\", e);\n  }\n}\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('user', JSON.stringify(action.payload));\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case 'LOGOUT':\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: undefined,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthContext = createContext(INITIAL_STATE);\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAGA;;AAGA;;AAMA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC;AAElD,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AAC9C,IAAIF,SAAS,EAAE;EACb,IAAI;IACFF,aAAa,CAACC,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;EAC5C,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEF,CAAC,CAAC;EAC7D;AACF;AAEA,MAAMG,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClBV,YAAY,CAACW,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACH,MAAM,CAACI,OAAO,CAAC,CAAC;MAC5D,OAAO;QACL,GAAGL,KAAK;QACRV,IAAI,EAAEW,MAAM,CAACI;MACf,CAAC;IACH,KAAK,QAAQ;MACXb,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;MAC/B,OAAO;QACL,GAAGN,KAAK;QACRV,IAAI,EAAEiB;MACR,CAAC;IACH;MACE,OAAOP,KAAK;EAAC;AAEnB,CAAC;AAAC,KAjBID,WAAW;AAmBjB,OAAO,MAAMS,WAAW,gBAAGrB,aAAa,CAACE,aAAa,CAAC;AAAC,MAA3CmB,WAAW;AAExB,OAAO,MAAMC,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGvB,UAAU,CAACW,WAAW,EAAEV,aAAa,CAAC;EAEhE,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLC,IAAI,EAAEU,KAAK,CAACV,IAAI;MAChBqB;IACF,CAAE;IAAA,UAEDD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,GAbWD,mBAAmB;AAAA,MAAnBA,mBAAmB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}