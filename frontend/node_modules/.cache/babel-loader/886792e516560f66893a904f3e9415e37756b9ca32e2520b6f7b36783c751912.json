{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laksh\\\\OneDrive\\\\Desktop\\\\SEM 5 BEE Project\\\\Skyline Voyages\\\\Skyline Voyages\\\\Skyline Voyages\\\\frontend\\\\src\\\\pages\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from 'react';\n// import './LoginForm.css';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { BASE_URL } from '../utils/config';\n// import { AuthContext } from '../context/AuthContext'; // Import the context\n\n// const LoginForm = () => {\n//   const { emaill } = useParams();\n//   const navigate = useNavigate(); \n//   const [email, setEmail] = useState(emaill || '');\n//   const [otp, setOtp] = useState('');\n//   const { dispatch } = useContext(AuthContext); // Access dispatch from context\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log('Email:', email);\n//     console.log('OTP:', otp);\n\n//     try {\n//       const response = await fetch(`${BASE_URL}/auth/login/otp`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         credentials: 'include',\n//         body: JSON.stringify({ email, otp }),\n//       });\n\n//       if (response.ok) {\n//         const result = await response.json();\n\n//         // Dispatch the LOGIN_SUCCESS action to save user info in context\n//         dispatch({ type: 'LOGIN_SUCCESS', payload: result.data });\n\n//         navigate(\"/home\");\n\n//       } else {\n//         alert(\"OTP not verified\");\n//       }\n\n//     } catch (error) {\n//       console.error('An error occurred:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"form-container\">\n//         <h2>Login</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"input-field\">\n//             <label htmlFor=\"email\">Email</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               readOnly\n//               required\n//             />\n//           </div>\n//           <div className=\"input-field\">\n//             <label htmlFor=\"otp\">OTP</label>\n//             <input\n//               type=\"text\"\n//               id=\"otp\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\n//         </form>\n//       </div>\n//       <div className=\"image-container\">\n//         <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2mXd1Ux1JWvXSnRpPbhWq3oO4u8jUVQCGaw&s\" alt=\"Login\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useContext, useState } from 'react';\nimport './LoginForm.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { BASE_URL } from '../utils/config';\nimport { AuthContext } from '../context/AuthContext'; // Import the context\nimport { toast, ToastContainer } from 'react-toastify'; // Import toastify\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const {\n    emaill\n  } = useParams();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(emaill || '');\n  const [otp, setOtp] = useState('');\n  const {\n    dispatch\n  } = useContext(AuthContext); // Access dispatch from context\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Email:', email);\n    console.log('OTP:', otp);\n    try {\n      const response = await fetch(`${BASE_URL}/auth/login/otp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Dispatch the LOGIN_SUCCESS action to save user info in context\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: result.data\n        });\n\n        // Show a success toast\n        toast.success('Login successful!');\n        navigate(\"/home\");\n      } else {\n        // Show an error toast if OTP is not verified\n        toast.error('OTP not verified. Please try again.');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      // Show an error toast in case of an error\n      toast.error('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            readOnly: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"otp\",\n            children: \"OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"otp\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2mXd1Ux1JWvXSnRpPbhWq3oO4u8jUVQCGaw&s\",\n        alt: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"VnToQhdI63HTEayXXNsxcT8fAoo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useContext","useState","useParams","useNavigate","BASE_URL","AuthContext","toast","ToastContainer","LoginForm","emaill","navigate","email","setEmail","otp","setOtp","dispatch","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","credentials","body","JSON","stringify","ok","result","json","type","payload","data","success","error","target","value"],"sources":["C:/Users/Laksh/OneDrive/Desktop/SEM 5 BEE Project/Skyline Voyages/Skyline Voyages/Skyline Voyages/frontend/src/pages/LoginForm.jsx"],"sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import './LoginForm.css';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import { BASE_URL } from '../utils/config';\r\n// import { AuthContext } from '../context/AuthContext'; // Import the context\r\n\r\n// const LoginForm = () => {\r\n//   const { emaill } = useParams();\r\n//   const navigate = useNavigate(); \r\n//   const [email, setEmail] = useState(emaill || '');\r\n//   const [otp, setOtp] = useState('');\r\n//   const { dispatch } = useContext(AuthContext); // Access dispatch from context\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log('Email:', email);\r\n//     console.log('OTP:', otp);\r\n\r\n//     try {\r\n//       const response = await fetch(`${BASE_URL}/auth/login/otp`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         credentials: 'include',\r\n//         body: JSON.stringify({ email, otp }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const result = await response.json();\r\n\r\n//         // Dispatch the LOGIN_SUCCESS action to save user info in context\r\n//         dispatch({ type: 'LOGIN_SUCCESS', payload: result.data });\r\n        \r\n//         navigate(\"/home\");\r\n        \r\n//       } else {\r\n//         alert(\"OTP not verified\");\r\n//       }\r\n      \r\n//     } catch (error) {\r\n//       console.error('An error occurred:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"form-container\">\r\n//         <h2>Login</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"input-field\">\r\n//             <label htmlFor=\"email\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               value={email}\r\n//               readOnly\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-field\">\r\n//             <label htmlFor=\"otp\">OTP</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"otp\"\r\n//               value={otp}\r\n//               onChange={(e) => setOtp(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n//         </form>\r\n//       </div>\r\n//       <div className=\"image-container\">\r\n//         <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2mXd1Ux1JWvXSnRpPbhWq3oO4u8jUVQCGaw&s\" alt=\"Login\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport './LoginForm.css';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { BASE_URL } from '../utils/config';\r\nimport { AuthContext } from '../context/AuthContext'; // Import the context\r\nimport { toast, ToastContainer } from 'react-toastify'; // Import toastify\r\n\r\nconst LoginForm = () => {\r\n  const { emaill } = useParams();\r\n  const navigate = useNavigate(); \r\n  const [email, setEmail] = useState(emaill || '');\r\n  const [otp, setOtp] = useState('');\r\n  const { dispatch } = useContext(AuthContext); // Access dispatch from context\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Email:', email);\r\n    console.log('OTP:', otp);\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/auth/login/otp`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n\r\n        // Dispatch the LOGIN_SUCCESS action to save user info in context\r\n        dispatch({ type: 'LOGIN_SUCCESS', payload: result.data });\r\n        \r\n        // Show a success toast\r\n        toast.success('Login successful!');\r\n        \r\n        navigate(\"/home\");\r\n        \r\n      } else {\r\n        // Show an error toast if OTP is not verified\r\n        toast.error('OTP not verified. Please try again.');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n      // Show an error toast in case of an error\r\n      toast.error('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"form-container\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              readOnly\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"otp\">OTP</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"image-container\">\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2mXd1Ux1JWvXSnRpPbhWq3oO4u8jUVQCGaw&s\" alt=\"Login\" />\r\n      </div>\r\n\r\n      {/* ToastContainer to display toast notifications */}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}