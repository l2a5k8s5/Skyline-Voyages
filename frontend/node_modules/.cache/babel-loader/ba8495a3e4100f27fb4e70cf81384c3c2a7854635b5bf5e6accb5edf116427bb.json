{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laksh\\\\OneDrive\\\\Desktop\\\\SEM 5 BEE Project\\\\Skyline Voyages\\\\Skyline Voyages\\\\Skyline Voyages\\\\frontend\\\\src\\\\pages\\\\Bookingdetails\\\\bokkingdetails.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from 'react';\n// import './bookingDetails.css';\n// import { AuthContext } from '../../context/AuthContext';\n// import { BASE_URL } from '../../utils/config';\n\n// const BookingDetails = () => {\n//   const { user } = useContext(AuthContext);\n//   const [bookings, setBookings] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUserBookings = async () => {\n//       if (!user) {\n//         setError('User not logged in');\n//         setLoading(false);\n//         return;\n//       }\n\n//       try {\n//         const response = await fetch(`${BASE_URL}/booking`, {\n//           method: 'GET',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           credentials: 'include',\n//         });\n\n//         const data = await response.json();\n\n//         if (response.ok) {\n//           setBookings(data.data || []);\n//         } else {\n//           setError(data.message || 'Failed to fetch bookings');\n//         }\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUserBookings();\n//   }, [user]);\n\n//   if (loading) return <p>Loading your bookings...</p>;\n//   if (error) return <p>{error}</p>;\n//   if (!bookings.length) return <p>No bookings found.</p>;\n\n//   return (\n//     <div className='booking-details'>\n//       <h2>Your Bookings</h2>\n//       <div className=\"booking-cards\">\n//         {bookings.map((booking) => (\n//           <div key={booking._id} className=\"booking-card\">\n//             <h3 className=\"card-title\">Tour Information</h3>\n//             <div className=\"card-body\">\n//               <p><strong>Tour Name:</strong> {booking.tourName}</p>\n//               <p><strong>Full Name:</strong> {booking.fullName}</p>\n//               <p><strong>Number of Guests:</strong> {booking.guestSize}</p>\n//               <p><strong>Booking Date:</strong> {new Date(booking.bookAt).toLocaleDateString()}</p>\n//               <p><strong>Phone:</strong> {booking.phone}</p>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingDetails;\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport './bookingDetails.css';\nimport { AuthContext } from '../../context/AuthContext';\nimport { BASE_URL } from '../../utils/config';\nimport { toast, ToastContainer } from 'react-toastify'; // Import toastify\nimport 'react-toastify/dist/ReactToastify.css'; // Import the toast CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingDetails = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserBookings = async () => {\n      if (!user) {\n        setError('User not logged in');\n        setLoading(false);\n        toast.error('User not logged in'); // Show toast if user is not logged in\n        return;\n      }\n      try {\n        const response = await fetch(`${BASE_URL}/booking`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setBookings(data.data || []);\n          toast.success('Bookings fetched successfully'); // Show success toast\n        } else {\n          setError(data.message || 'Failed to fetch bookings');\n          toast.error(data.message || 'Failed to fetch bookings'); // Show error toast if the response is not ok\n        }\n      } catch (error) {\n        setError(error.message);\n        toast.error('An error occurred while fetching bookings'); // Show error toast for fetch errors\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserBookings();\n  }, [user]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your bookings...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 21\n  }, this);\n  if (!bookings.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No bookings found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-cards\",\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Tour Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tour Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 18\n            }, this), \" \", booking.tourName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 18\n            }, this), \" \", booking.fullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Number of Guests:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 18\n            }, this), \" \", booking.guestSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Booking Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 18\n            }, this), \" \", new Date(booking.bookAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 18\n            }, this), \" \", booking.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, booking._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingDetails, \"+we58xqHedA4MgtwFm/4+On0zyc=\");\n_c = BookingDetails;\nexport default BookingDetails;\nvar _c;\n$RefreshReg$(_c, \"BookingDetails\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","BASE_URL","toast","ToastContainer","BookingDetails","user","bookings","setBookings","loading","setLoading","error","setError","fetchUserBookings","response","fetch","method","headers","credentials","data","json","ok","success","message","length","map","booking","tourName","fullName","guestSize","Date","bookAt","toLocaleDateString","phone","_id"],"sources":["C:/Users/Laksh/OneDrive/Desktop/SEM 5 BEE Project/Skyline Voyages/Skyline Voyages/Skyline Voyages/frontend/src/pages/Bookingdetails/bokkingdetails.jsx"],"sourcesContent":["// import React, { useState, useEffect, useContext } from 'react';\r\n// import './bookingDetails.css';\r\n// import { AuthContext } from '../../context/AuthContext';\r\n// import { BASE_URL } from '../../utils/config';\r\n\r\n// const BookingDetails = () => {\r\n//   const { user } = useContext(AuthContext);\r\n//   const [bookings, setBookings] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserBookings = async () => {\r\n//       if (!user) {\r\n//         setError('User not logged in');\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const response = await fetch(`${BASE_URL}/booking`, {\r\n//           method: 'GET',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           credentials: 'include',\r\n//         });\r\n\r\n//         const data = await response.json();\r\n\r\n//         if (response.ok) {\r\n//           setBookings(data.data || []);\r\n//         } else {\r\n//           setError(data.message || 'Failed to fetch bookings');\r\n//         }\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchUserBookings();\r\n//   }, [user]);\r\n\r\n//   if (loading) return <p>Loading your bookings...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n//   if (!bookings.length) return <p>No bookings found.</p>;\r\n\r\n//   return (\r\n//     <div className='booking-details'>\r\n//       <h2>Your Bookings</h2>\r\n//       <div className=\"booking-cards\">\r\n//         {bookings.map((booking) => (\r\n//           <div key={booking._id} className=\"booking-card\">\r\n//             <h3 className=\"card-title\">Tour Information</h3>\r\n//             <div className=\"card-body\">\r\n//               <p><strong>Tour Name:</strong> {booking.tourName}</p>\r\n//               <p><strong>Full Name:</strong> {booking.fullName}</p>\r\n//               <p><strong>Number of Guests:</strong> {booking.guestSize}</p>\r\n//               <p><strong>Booking Date:</strong> {new Date(booking.bookAt).toLocaleDateString()}</p>\r\n//               <p><strong>Phone:</strong> {booking.phone}</p>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDetails;\r\n\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport './bookingDetails.css';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { BASE_URL } from '../../utils/config';\r\nimport { toast, ToastContainer } from 'react-toastify'; // Import toastify\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import the toast CSS\r\n\r\nconst BookingDetails = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBookings = async () => {\r\n      if (!user) {\r\n        setError('User not logged in');\r\n        setLoading(false);\r\n        toast.error('User not logged in'); // Show toast if user is not logged in\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/booking`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setBookings(data.data || []);\r\n          toast.success('Bookings fetched successfully'); // Show success toast\r\n        } else {\r\n          setError(data.message || 'Failed to fetch bookings');\r\n          toast.error(data.message || 'Failed to fetch bookings'); // Show error toast if the response is not ok\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n        toast.error('An error occurred while fetching bookings'); // Show error toast for fetch errors\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserBookings();\r\n  }, [user]);\r\n\r\n  if (loading) return <p>Loading your bookings...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!bookings.length) return <p>No bookings found.</p>;\r\n\r\n  return (\r\n    <div className='booking-details'>\r\n      <h2>Your Bookings</h2>\r\n      <div className=\"booking-cards\">\r\n        {bookings.map((booking) => (\r\n          <div key={booking._id} className=\"booking-card\">\r\n            <h3 className=\"card-title\">Tour Information</h3>\r\n            <div className=\"card-body\">\r\n              <p><strong>Tour Name:</strong> {booking.tourName}</p>\r\n              <p><strong>Full Name:</strong> {booking.fullName}</p>\r\n              <p><strong>Number of Guests:</strong> {booking.guestSize}</p>\r\n              <p><strong>Booking Date:</strong> {new Date(booking.bookAt).toLocaleDateString()}</p>\r\n              <p><strong>Phone:</strong> {booking.phone}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* ToastContainer to render toasts */}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingDetails;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}